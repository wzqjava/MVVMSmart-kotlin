apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

static def releaseTime() {
    return new Date().format("yyyyMMdd-HH")
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    signingConfigs {
        app {
            keyAlias 'wzq'
            keyPassword '123456'
            storeFile file(rootProject.getRootDir().getAbsolutePath() + '/wzq.jks')
            storePassword '123456'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        flavorDimensions "default"
        signingConfig signingConfigs.debug
    }
    dataBinding {
        enabled true
    }
    androidExtensions {
        experimental = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }

    buildTypes {

        release {
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            signingConfig signingConfigs.app
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
        debug {
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            signingConfig signingConfigs.app
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // 渠道包定义，默认定义的名称就是渠道名称
    productFlavors {
        // 1:线下, 0:线上;
        dev {
            manifestPlaceholders = [ENVIRONMENT: "1", LOG_ENABLE: "1", CHANNEL_ID: "dev", SCREENPORTRAIT: "1", APP_VERSION: rootProject.ext.android.versionCode]
        }
        qa {
            manifestPlaceholders = [ENVIRONMENT: "4", LOG_ENABLE: "1", CHANNEL_ID: "qa", SCREENPORTRAIT: "1", APP_VERSION: rootProject.ext.android.versionCode]
            signingConfig signingConfigs.app
        }
         huawei {
             manifestPlaceholders = [ENVIRONMENT: "2", LOG_ENABLE: "0", CHANNEL_ID: "biaozhun", SCREENPORTRAIT: "1", APP_VERSION: rootProject.ext.android.versionCode]
         }
        flavorDimensions "default"
    }
    buildToolsVersion = android.buildToolsVersion
    //参考：https://blog.csdn.net/lablenet/article/details/78391457
    applicationVariants.all { variant ->
        variant.outputs.all {
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = outputFileName.replace("app", "MVVMSmart-kotlin")
                // 中段(保持不变)
                // 尾端
                if (fileName.contains("-dev"))
                    fileName = fileName.replace(".apk", "_v${defaultConfig.versionName}_t${releaseTime()}.apk")
                else
                    fileName = fileName.replace(".apk", "_v${defaultConfig.versionName}.apk")
                //output.outputFile = new File(outputFile.parent, fileName)
                outputFileName = fileName
            }
        }
    }

    //添加 https://www.jianshu.com/p/434928537a90
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    api project(':mvvmsmart')     //MVVMSmart
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //底部tabBar
    implementation 'me.majiajie:pager-bottom-tab-strip:2.2.5'
    api rootProject.ext.dependencies["smartRefreshLayout"] // 刷新框架
    implementation "androidx.room:room-runtime:2.2.5"
    kapt "android.arch.persistence.room:compiler:2.2.3"     // java
    annotationProcessor "androidx.room:room-compiler:2.2.5"
    // For Kotlin use kapt instead of annotationProcessor
    //material-dialogs
    api rootProject.ext.dependencies["material-dialogs-core"]
    api rootProject.ext.dependencies["material-dialogs-commons"]
    api "androidx.core:core-ktx:1.2.0"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}

task removeAppBuildDir(type: Delete) {
    new File("build").deleteDir()
}
